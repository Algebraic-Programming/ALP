#!/bin/bash

#
#   Copyright 2021 Huawei Technologies Co., Ltd.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

INCLUDEDIR="@INCLUDE_INSTALL_DIR@"
BACKENDS=(@AVAILABLE_BACKENDS_SPACED@)
BACKENDCOMPILERS=(@BACKEND_COMPILERS_SPACED@)
BACKENDCFLAGS=(@BACKEND_CFLAGS_SPACED@)
BACKENDLFLAGS=(@BACKEND_LFLAGS_SPACED@)
VERSION="@VERSION@"
BACKEND_LIBRARY_OUTPUT_NAME="@BACKEND_LIBRARY_OUTPUT_NAME@"
LIBRARY_DIRS=(@LIBRARY_DIRS_SPACED@)
UTILS_LIBRARY_NAME="@ALP_UTILS_LIBRARY_OUTPUT_NAME@"
UTILS_LIBRARY_DIR="@ALP_UTILS_INSTALL_DIR@"

declare -a ARGS
LINK="dynamic"
SHOW="eval"
BACKEND=${BACKENDS[0]}
CXXSTD=c++11
help="no"

function print_help {
	local this_bin="$1"
	local BACKEND=$2
	local COMPILER=$3
	local help_arg="--help"
	if [[ "${BACKEND}" == "bsp1d" || "${BACKEND}" == "hybrid" ]]; then
		# LPF's lpfcxx doesn't recognize "--help", just "-help"
		help_arg="-help"
	fi

	echo "* Compiles an ALP/GraphBLAS application by calling an underlying compiler and by passing needed flags."
	echo
	echo "USAGE: ${this_bin} [ALP-specific options...] [--] <compiler arguments...>"
	echo
	echo "ALP-specific options:"
	echo "  -b,--backend <backend>  compile against the ALP/GraphBLAS backend <backend>; possible values: ${BACKENDS[@]}; default: reference"
	echo "  --link-alp-static       link the specified ALP/GraphBLAS backend statically (default linking is dynamic)"
	echo "  --show                  show the full compilation command WITHOUT executing it"
	echo "  --version               display the current ALP/GraphBLAS version"
	echo "  --help                  display this help"
	echo "  -- <args...>            pass all the following <args...> arguments directly to the underlying compiler"
	echo
	echo "* Selected backend: ${BACKEND}"
	echo "* Underlying compiler: ${COMPILER}"
	echo "* Underlying compiler help:"
	echo
	exec ${COMPILER} ${help_arg}
}

while [[ $# -gt 0 ]]; do
	option="$1"
	shift;
	case ${option} in
		-b|--backend)
			BACKEND=$1
			shift
		;;
		--link-alp-static)
			LINK="static"
		;;
		--show)
			SHOW=echo
		;;
		--std=*)
			CXXSTD="${option#*=}"
		;;
		--version)
			echo "This is ALP/GraphBLAS version ${VERSION}"
			echo "This software comes with NO warranty; not even for"
			echo "MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE."
			echo "See the license file for details."
			echo " "
			ARGS+=("${option}")
		;;
		--help)
			help="yes"
		;;
		--)
			break
		;;
		*)
			ARGS+=("${option}")
		;;
	esac
done

BACKENDID=-1
for i in "${!BACKENDS[@]}"; do
	if [[ "${BACKENDS[$i]}" = "${BACKEND}" ]]
	then
		BACKENDID=$i
		break
	fi
done
COMPILER="${BACKENDCOMPILERS[${BACKENDID}]}"

if [[ ${BACKENDID} -eq -1 ]]
then
	echo "Could not find requested backend \`${BACKEND}'"
	exit 255
fi

if [[ "${help}" == "yes" ]]; then
	print_help "$(realpath $0)" ${BACKEND} ${COMPILER}
	exit 0
fi


if [[ ! -d "${INCLUDEDIR}" ]]
then
	echo "Could not find GraphBLAS include directory in ${INCLUDEDIR}"
	exit 255
fi

if [[ "${LINK}" == "dynamic" ]]; then
	LIB="-l${UTILS_LIBRARY_NAME} -L '${UTILS_LIBRARY_DIR}' -l${BACKEND_LIBRARY_OUTPUT_NAME} -L '${LIBRARY_DIRS[${BACKENDID}]}'"
else
	LIB="'${UTILS_LIBRARY_DIR}/lib${UTILS_LIBRARY_NAME}.a'  '${LIBRARY_DIRS[${BACKENDID}]}/lib${BACKEND_LIBRARY_OUTPUT_NAME}.a'"
fi
LFLAGS="${LIB} ${BACKENDLFLAGS[${BACKENDID}]} @COMMON_LFLAGS_POST_SPACED@"

CMD="${COMPILER} -std=${CXXSTD} -I'${INCLUDEDIR}' ${BACKENDCFLAGS[${BACKENDID}]} ${ARGS[@]} "$@" ${LFLAGS}"

${SHOW} "${CMD}"

