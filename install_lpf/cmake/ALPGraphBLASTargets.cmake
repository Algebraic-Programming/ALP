# Generated by CMake

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.5)
   message(FATAL_ERROR "CMake >= 2.6.0 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.6)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_targetsDefined)
set(_targetsNotDefined)
set(_expectedTargets)
foreach(_expectedTarget ALPGraphBLAS::common_flags ALPGraphBLAS::backend_flags ALPGraphBLAS::backend_headers_nodefs ALPGraphBLAS::alp_utils_headers ALPGraphBLAS::backend_reference_headers ALPGraphBLAS::backend_reference_omp_headers ALPGraphBLAS::backend_hyperdags_headers ALPGraphBLAS::backend_nonblocking_headers ALPGraphBLAS::backend_bsp1d_headers ALPGraphBLAS::backend_hybrid_headers ALPGraphBLAS::algorithms ALPGraphBLAS::transition ALPGraphBLAS::alp_utils_static ALPGraphBLAS::alp_utils_dynamic ALPGraphBLAS::backend_hyperdags_static ALPGraphBLAS::backend_hyperdags_shared ALPGraphBLAS::backend_bsp1d_static ALPGraphBLAS::backend_bsp1d_shared ALPGraphBLAS::backend_hybrid_static ALPGraphBLAS::backend_hybrid_shared ALPGraphBLAS::backend_shmem_static ALPGraphBLAS::backend_shmem_shared ALPGraphBLAS::sparseblas_static ALPGraphBLAS::sparseblas_omp_static ALPGraphBLAS::backend_reference_static ALPGraphBLAS::backend_reference_shared ALPGraphBLAS::backend_reference_omp_static ALPGraphBLAS::backend_reference_omp_shared ALPGraphBLAS::backend_nonblocking_static ALPGraphBLAS::backend_nonblocking_shared)
  list(APPEND _expectedTargets ${_expectedTarget})
  if(NOT TARGET ${_expectedTarget})
    list(APPEND _targetsNotDefined ${_expectedTarget})
  endif()
  if(TARGET ${_expectedTarget})
    list(APPEND _targetsDefined ${_expectedTarget})
  endif()
endforeach()
if("${_targetsDefined}" STREQUAL "${_expectedTargets}")
  unset(_targetsDefined)
  unset(_targetsNotDefined)
  unset(_expectedTargets)
  set(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT "${_targetsDefined}" STREQUAL "")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_targetsDefined}\nTargets not yet defined: ${_targetsNotDefined}\n")
endif()
unset(_targetsDefined)
unset(_targetsNotDefined)
unset(_expectedTargets)


# The installation prefix configured by this project.
set(_IMPORT_PREFIX "/host/install_lpf")

# Create imported target ALPGraphBLAS::common_flags
add_library(ALPGraphBLAS::common_flags INTERFACE IMPORTED)

set_target_properties(ALPGraphBLAS::common_flags PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "\$<\$<CONFIG:Release>:>;\$<\$<CONFIG:Debug>:>;\$<\$<CONFIG:Coverage>:>"
  INTERFACE_COMPILE_OPTIONS "\$<\$<CONFIG:Release>:-g;-Wall;-Wextra>;\$<\$<CONFIG:Debug>:-g;-Wall;-Wextra;-fno-omit-frame-pointer>;\$<\$<CONFIG:Coverage>:-g;-Wall;-Wextra;-fprofile-arcs;-ftest-coverage;-fprofile-update=atomic>"
  INTERFACE_LINK_LIBRARIES "\$<\$<CONFIG:Coverage>:GCov::GCov>"
)

# Create imported target ALPGraphBLAS::backend_flags
add_library(ALPGraphBLAS::backend_flags INTERFACE IMPORTED)

set_target_properties(ALPGraphBLAS::backend_flags PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "\$<\$<CONFIG:Release>:NDEBUG>;\$<\$<CONFIG:Debug>:>;\$<\$<CONFIG:Coverage>:>"
  INTERFACE_COMPILE_OPTIONS "\$<\$<CONFIG:Release>:-O3;-march=native;-mtune=native;-funroll-loops>;\$<\$<CONFIG:Debug>:-O0>;\$<\$<CONFIG:Coverage>:-O1;-fno-inline;-fno-inline-small-functions;-fno-default-inline>"
  INTERFACE_LINK_LIBRARIES "ALPGraphBLAS::common_flags"
)

# Create imported target ALPGraphBLAS::backend_headers_nodefs
add_library(ALPGraphBLAS::backend_headers_nodefs INTERFACE IMPORTED)

set_target_properties(ALPGraphBLAS::backend_headers_nodefs PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/.;/host/install_lpf/include"
  INTERFACE_LINK_LIBRARIES "LibM::LibM;Numa::Numa"
)

# Create imported target ALPGraphBLAS::alp_utils_headers
add_library(ALPGraphBLAS::alp_utils_headers INTERFACE IMPORTED)

set_target_properties(ALPGraphBLAS::alp_utils_headers PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/.;/host/install_lpf/include"
  INTERFACE_LINK_LIBRARIES "Numa::Numa"
)

# Create imported target ALPGraphBLAS::backend_reference_headers
add_library(ALPGraphBLAS::backend_reference_headers INTERFACE IMPORTED)

set_target_properties(ALPGraphBLAS::backend_reference_headers PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "_GRB_WITH_REFERENCE;_GRB_WITH_OMP"
  INTERFACE_LINK_LIBRARIES "ALPGraphBLAS::backend_headers_nodefs;OpenMP::OpenMP_CXX"
)

# Create imported target ALPGraphBLAS::backend_reference_omp_headers
add_library(ALPGraphBLAS::backend_reference_omp_headers INTERFACE IMPORTED)

set_target_properties(ALPGraphBLAS::backend_reference_omp_headers PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "_GRB_WITH_REFERENCE;_GRB_WITH_OMP"
  INTERFACE_LINK_LIBRARIES "ALPGraphBLAS::backend_headers_nodefs;OpenMP::OpenMP_CXX"
)

# Create imported target ALPGraphBLAS::backend_hyperdags_headers
add_library(ALPGraphBLAS::backend_hyperdags_headers INTERFACE IMPORTED)

set_target_properties(ALPGraphBLAS::backend_hyperdags_headers PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "_GRB_WITH_HYPERDAGS"
  INTERFACE_LINK_LIBRARIES "ALPGraphBLAS::backend_reference_headers"
)

# Create imported target ALPGraphBLAS::backend_nonblocking_headers
add_library(ALPGraphBLAS::backend_nonblocking_headers INTERFACE IMPORTED)

set_target_properties(ALPGraphBLAS::backend_nonblocking_headers PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "_GRB_WITH_NONBLOCKING"
  INTERFACE_LINK_LIBRARIES "ALPGraphBLAS::backend_reference_headers;OpenMP::OpenMP_CXX"
)

# Create imported target ALPGraphBLAS::backend_bsp1d_headers
add_library(ALPGraphBLAS::backend_bsp1d_headers INTERFACE IMPORTED)

set_target_properties(ALPGraphBLAS::backend_bsp1d_headers PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "_GRB_WITH_LPF"
  INTERFACE_LINK_LIBRARIES "Numa::Numa;ALPGraphBLAS::backend_reference_headers"
)

# Create imported target ALPGraphBLAS::backend_hybrid_headers
add_library(ALPGraphBLAS::backend_hybrid_headers INTERFACE IMPORTED)

set_target_properties(ALPGraphBLAS::backend_hybrid_headers PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "_GRB_WITH_LPF"
  INTERFACE_LINK_LIBRARIES "Numa::Numa;ALPGraphBLAS::backend_reference_omp_headers"
)

# Create imported target ALPGraphBLAS::algorithms
add_library(ALPGraphBLAS::algorithms INTERFACE IMPORTED)

set_target_properties(ALPGraphBLAS::algorithms PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/graphblas/algorithms"
  INTERFACE_LINK_LIBRARIES "ALPGraphBLAS::backend_headers_nodefs"
)

# Create imported target ALPGraphBLAS::transition
add_library(ALPGraphBLAS::transition INTERFACE IMPORTED)

set_target_properties(ALPGraphBLAS::transition PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/transition/"
)

# Create imported target ALPGraphBLAS::alp_utils_static
add_library(ALPGraphBLAS::alp_utils_static STATIC IMPORTED)

set_target_properties(ALPGraphBLAS::alp_utils_static PROPERTIES
  INTERFACE_LINK_LIBRARIES "\$<LINK_ONLY:Threads::Threads>;\$<LINK_ONLY:ALPGraphBLAS::backend_flags>;ALPGraphBLAS::alp_utils_headers"
)

# Create imported target ALPGraphBLAS::alp_utils_dynamic
add_library(ALPGraphBLAS::alp_utils_dynamic SHARED IMPORTED)

set_target_properties(ALPGraphBLAS::alp_utils_dynamic PROPERTIES
  INTERFACE_LINK_LIBRARIES "ALPGraphBLAS::alp_utils_headers"
)

# Create imported target ALPGraphBLAS::backend_hyperdags_static
add_library(ALPGraphBLAS::backend_hyperdags_static STATIC IMPORTED)

set_target_properties(ALPGraphBLAS::backend_hyperdags_static PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "_GRB_BACKEND=hyperdags;_GRB_WITH_HYPERDAGS_USING=reference"
  INTERFACE_LINK_LIBRARIES "\$<LINK_ONLY:ALPGraphBLAS::backend_flags>;ALPGraphBLAS::backend_hyperdags_headers"
)

# Create imported target ALPGraphBLAS::backend_hyperdags_shared
add_library(ALPGraphBLAS::backend_hyperdags_shared SHARED IMPORTED)

set_target_properties(ALPGraphBLAS::backend_hyperdags_shared PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "_GRB_BACKEND=hyperdags;_GRB_WITH_HYPERDAGS_USING=reference"
  INTERFACE_LINK_LIBRARIES "ALPGraphBLAS::backend_hyperdags_headers"
)

# Create imported target ALPGraphBLAS::backend_bsp1d_static
add_library(ALPGraphBLAS::backend_bsp1d_static STATIC IMPORTED)

set_target_properties(ALPGraphBLAS::backend_bsp1d_static PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "_GRB_BACKEND=BSP1D;_GRB_BSP1D_BACKEND=reference"
  INTERFACE_LINK_LIBRARIES "lpf_hl;lpf_core_univ_mpimsg_Release;/usr/lib/x86_64-linux-gnu/libmpichcxx.so;/usr/lib/x86_64-linux-gnu/libmpich.so;\$<LINK_ONLY:ALPGraphBLAS::backend_flags>;ALPGraphBLAS::backend_bsp1d_headers"
  INTERFACE_LINK_OPTIONS "-rdynamic"
)

# Create imported target ALPGraphBLAS::backend_bsp1d_shared
add_library(ALPGraphBLAS::backend_bsp1d_shared SHARED IMPORTED)

set_target_properties(ALPGraphBLAS::backend_bsp1d_shared PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "_GRB_BACKEND=BSP1D;_GRB_BSP1D_BACKEND=reference"
  INTERFACE_LINK_LIBRARIES "lpf_hl;lpf_core_univ_mpimsg_Release;/usr/lib/x86_64-linux-gnu/libmpichcxx.so;/usr/lib/x86_64-linux-gnu/libmpich.so;ALPGraphBLAS::backend_bsp1d_headers"
  INTERFACE_LINK_OPTIONS "-rdynamic"
)

# Create imported target ALPGraphBLAS::backend_hybrid_static
add_library(ALPGraphBLAS::backend_hybrid_static STATIC IMPORTED)

set_target_properties(ALPGraphBLAS::backend_hybrid_static PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "_GRB_BACKEND=BSP1D;_GRB_BSP1D_BACKEND=reference_omp"
  INTERFACE_LINK_LIBRARIES "lpf_hl;lpf_core_univ_mpimsg_Release;/usr/lib/x86_64-linux-gnu/libmpichcxx.so;/usr/lib/x86_64-linux-gnu/libmpich.so;\$<LINK_ONLY:ALPGraphBLAS::backend_flags>;ALPGraphBLAS::backend_hybrid_headers"
  INTERFACE_LINK_OPTIONS "-rdynamic"
)

# Create imported target ALPGraphBLAS::backend_hybrid_shared
add_library(ALPGraphBLAS::backend_hybrid_shared SHARED IMPORTED)

set_target_properties(ALPGraphBLAS::backend_hybrid_shared PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "_GRB_BACKEND=BSP1D;_GRB_BSP1D_BACKEND=reference_omp"
  INTERFACE_LINK_LIBRARIES "lpf_hl;lpf_core_univ_mpimsg_Release;/usr/lib/x86_64-linux-gnu/libmpichcxx.so;/usr/lib/x86_64-linux-gnu/libmpich.so;ALPGraphBLAS::backend_hybrid_headers"
  INTERFACE_LINK_OPTIONS "-rdynamic"
)

# Create imported target ALPGraphBLAS::backend_shmem_static
add_library(ALPGraphBLAS::backend_shmem_static STATIC IMPORTED)

set_target_properties(ALPGraphBLAS::backend_shmem_static PROPERTIES
  INTERFACE_LINK_LIBRARIES "\$<LINK_ONLY:ALPGraphBLAS::backend_flags>;\$<LINK_ONLY:ALPGraphBLAS::backend_reference_omp_headers>"
)

# Create imported target ALPGraphBLAS::backend_shmem_shared
add_library(ALPGraphBLAS::backend_shmem_shared SHARED IMPORTED)

# Create imported target ALPGraphBLAS::sparseblas_static
add_library(ALPGraphBLAS::sparseblas_static STATIC IMPORTED)

set_target_properties(ALPGraphBLAS::sparseblas_static PROPERTIES
  INTERFACE_LINK_LIBRARIES "ALPGraphBLAS::backend_reference_static;ALPGraphBLAS::transition;\$<LINK_ONLY:ALPGraphBLAS::backend_flags>"
)

# Create imported target ALPGraphBLAS::sparseblas_omp_static
add_library(ALPGraphBLAS::sparseblas_omp_static STATIC IMPORTED)

set_target_properties(ALPGraphBLAS::sparseblas_omp_static PROPERTIES
  INTERFACE_LINK_LIBRARIES "ALPGraphBLAS::backend_reference_omp_static;ALPGraphBLAS::transition;\$<LINK_ONLY:ALPGraphBLAS::backend_flags>"
)

# Create imported target ALPGraphBLAS::backend_reference_static
add_library(ALPGraphBLAS::backend_reference_static INTERFACE IMPORTED)

set_target_properties(ALPGraphBLAS::backend_reference_static PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "_GRB_BACKEND=reference"
  INTERFACE_LINK_LIBRARIES "ALPGraphBLAS::backend_shmem_static;ALPGraphBLAS::backend_reference_headers"
)

# Create imported target ALPGraphBLAS::backend_reference_shared
add_library(ALPGraphBLAS::backend_reference_shared INTERFACE IMPORTED)

set_target_properties(ALPGraphBLAS::backend_reference_shared PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "_GRB_BACKEND=reference"
  INTERFACE_LINK_LIBRARIES "ALPGraphBLAS::backend_shmem_shared;ALPGraphBLAS::backend_reference_headers"
)

# Create imported target ALPGraphBLAS::backend_reference_omp_static
add_library(ALPGraphBLAS::backend_reference_omp_static INTERFACE IMPORTED)

set_target_properties(ALPGraphBLAS::backend_reference_omp_static PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "_GRB_BACKEND=reference_omp"
  INTERFACE_LINK_LIBRARIES "ALPGraphBLAS::backend_shmem_static;ALPGraphBLAS::backend_reference_omp_headers"
)

# Create imported target ALPGraphBLAS::backend_reference_omp_shared
add_library(ALPGraphBLAS::backend_reference_omp_shared INTERFACE IMPORTED)

set_target_properties(ALPGraphBLAS::backend_reference_omp_shared PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "_GRB_BACKEND=reference_omp"
  INTERFACE_LINK_LIBRARIES "ALPGraphBLAS::backend_shmem_shared;ALPGraphBLAS::backend_reference_omp_headers"
)

# Create imported target ALPGraphBLAS::backend_nonblocking_static
add_library(ALPGraphBLAS::backend_nonblocking_static INTERFACE IMPORTED)

set_target_properties(ALPGraphBLAS::backend_nonblocking_static PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "_GRB_BACKEND=nonblocking"
  INTERFACE_LINK_LIBRARIES "ALPGraphBLAS::backend_shmem_static;ALPGraphBLAS::backend_nonblocking_headers"
)

# Create imported target ALPGraphBLAS::backend_nonblocking_shared
add_library(ALPGraphBLAS::backend_nonblocking_shared INTERFACE IMPORTED)

set_target_properties(ALPGraphBLAS::backend_nonblocking_shared PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "_GRB_BACKEND=nonblocking"
  INTERFACE_LINK_LIBRARIES "ALPGraphBLAS::backend_shmem_shared;ALPGraphBLAS::backend_nonblocking_headers"
)

if(CMAKE_VERSION VERSION_LESS 3.0.0)
  message(FATAL_ERROR "This file relies on consumers using CMake 3.0.0 or greater.")
endif()

# Load information for each installed configuration.
get_filename_component(_DIR "${CMAKE_CURRENT_LIST_FILE}" PATH)
file(GLOB CONFIG_FILES "${_DIR}/ALPGraphBLASTargets-*.cmake")
foreach(f ${CONFIG_FILES})
  include(${f})
endforeach()

# Cleanup temporary variables.
set(_IMPORT_PREFIX)

# Loop over all imported files and verify that they actually exist
foreach(target ${_IMPORT_CHECK_TARGETS} )
  foreach(file ${_IMPORT_CHECK_FILES_FOR_${target}} )
    if(NOT EXISTS "${file}" )
      message(FATAL_ERROR "The imported target \"${target}\" references the file
   \"${file}\"
but this file does not exist.  Possible reasons include:
* The file was deleted, renamed, or moved to another location.
* An install or uninstall procedure did not complete successfully.
* The installation package was faulty and contained
   \"${CMAKE_CURRENT_LIST_FILE}\"
but not all the files it references.
")
    endif()
  endforeach()
  unset(_IMPORT_CHECK_FILES_FOR_${target})
endforeach()
unset(_IMPORT_CHECK_TARGETS)

# This file does not depend on other imported targets which have
# been exported from the same project but in a separate export set.

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
